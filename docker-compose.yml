version: "3.8"

networks:
  app-tier:
    driver: bridge

services:
  http-proxy:
    build:
      context: .
      dockerfile: ./Dockerfile.http-proxy
    command: sbt run
    volumes:
      - "./http-proxy:/http-proxy"
      - "./scala-common:/common"
    ports:
      - "9000:9000"
    networks:
      - app-tier
    environment:
      BROKERS: kafka:9092
  zookeeper:
    image: "bitnami/zookeeper:3.7.0"
    ports:
      - "9181:9181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
      - ZOO_PORT_NUMBER=9181
    networks:
      - app-tier
  kafka:
    image: "bitnami/kafka:2.8.1"
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:9181
      - ALLOW_PLAINTEXT_LISTENER=yes
      # Add a protocol PLAINTEXT_HOST, to be able to connect the host to the kafka instance
      # To connect from host machine, use port 29092 instead of 9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,PLAINTEXT_HOST://:29092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      - KAFKA_CFG_ADVERTISED_HOST_NAME=kafka
    depends_on:
      - zookeeper
    networks:
      - app-tier
  spark:
    build:
      context: .
      dockerfile: ./Dockerfile.spark
    command: sbt run
    volumes:
      - "./spark:/spark"
      - "./scala-common:/common"
    environment:
      BROKERS: kafka:9092
    networks:
      - app-tier

  workers:
    build:
      context: .
      dockerfile: ./Dockerfile.workers
    command: sbt run
    volumes:
      - "./workers:/workers"
      - "./scala-common:/common"
    environment:
      BROKERS: kafka:9092
      # API key to the OpenWeatherMap API, you should have this defined in your .env file
      OWM_API_KEY: ${OWM_API_KEY}
    networks:
      - app-tier
